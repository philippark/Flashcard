flashcards for pronunciation

- get regular spaced retrieval flashcards mechanically done:
* allow user to say again (1min), hard, good, easy.
* keep track of time, 
* increment spaced retrival

later on:
- allow multiple study decks (which datastructure to use? how to store all this data?)
- implement QT

- allow user input audio
- use an api to get pronunciation audio




3/7/24:
- just for today, lets allow 2 options: pass, fail. If pass, set next study date to next day. If fail, don't change date.
- then let the pq for deck to store based on dates. For now, let's do only 0 for today, 1 for tmrw. So essentially, for now use interval.
what i need:
- flashcard getDueDate(), and update() which takes in score. (1 for pass, 0 for fail).


then for the future, slowly build the complexity of spaced repitition algo



3/8/24:
- today, let's get an audio input working and ask for audio input when showing front of the card.

Timeline:
- get flashcard mechanism working:
* allow user to create decks
* allow user to create flashcards
* allow user to select deck and study

- implement actual spaced repitition algorithm  

- implement SQL databases to store flashcards and study decks and audio answers
- get audio input working: get audio input, store it, compare it to answer audio



3/9/24:
- implement storing decks into file, and retrieving info only from this file
- abstract start page interface into a seperate function




read in file, create decks obj
create_card should store into file

- read_file()
- store_file()
- user_interface()